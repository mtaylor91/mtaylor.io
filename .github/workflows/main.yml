name: "Build"
on:
  push:
    branches:
    - "main"
jobs:
  build:
    name: "Build Source"
    runs-on: "mtaylor-io-runners"
    container:
      image: "docker.io/oven/bun:1"
    steps:
    - name: "Checkout"
      uses: "actions/checkout@v4"
    - name: "Build"
      run: |
        bun install
        bun run build
    - name: "Upload dist"
      uses: "actions/upload-artifact@v4"
      with:
        name: "dist"
        path: "dist"
        if-no-files-found: "error"
        retention-days: 0
        include-hidden-files: false
    - name: "Upload node_modules"
      uses: "actions/upload-artifact@v4"
      with:
        name: "node_modules"
        path: "node_modules"
        if-no-files-found: "error"
        retention-days: 0
        include-hidden-files: true
  version:
    name: "Assign Version"
    runs-on: "mtaylor-io-runners"
    container:
      image: "images.home.mtaylor.io/deployer:0.0.9"
    outputs:
      tag: "${{ steps.version.outputs.tag }}"
    steps:
    - name: "Checkout"
      uses: "actions/checkout@v4"
    - id: "version"
      name: "Generate Version Tag"
      run: |
        set -eux
        git config --global --add safe.directory $GITHUB_WORKSPACE
        git fetch origin 'refs/tags/*:refs/tags/*'
        export tag=$(get-release-tag)
        echo "tag=$tag" >> $GITHUB_OUTPUT
  tag:
    name: "Tag Repository"
    runs-on: "mtaylor-io-runners"
    container:
      image: "images.home.mtaylor.io/deployer:0.0.9"
    needs:
    - "build"
    - "version"
    outputs:
      sha: "${{ steps.tag.outputs.sha }}"
      tag: "${{ needs.version.outputs.tag }}"
    steps:
    - name: "Checkout"
      uses: "actions/checkout@v4"
    - id: tag
      name: "Tag"
      shell: "bash"
      run: |
        set -euxo pipefail
        git config --global --add safe.directory $GITHUB_WORKSPACE
        git config --global user.email "githubactions@mtaylor.io"
        git config --global user.name "GitHub Actions"
        pushd deploy
        kustomize edit set image images.home.mtaylor.io/mtaylor.io:${{ needs.version.outputs.tag }}
        popd
        git commit -a -m "Release ${{ needs.version.outputs.tag }}"
        git tag -a ${{ needs.version.outputs.tag }} -m "Release ${{ needs.version.outputs.tag }}"
        git push origin ${{ needs.version.outputs.tag }}
        sha=$(git rev-parse --short HEAD)
        echo "sha=$sha" >> $GITHUB_OUTPUT
  docker:
    name: "Build Docker Image"
    runs-on: "mtaylor-io-runners-dind"
    needs:
    - "tag"
    outputs:
      sha: "${{ needs.tag.outputs.sha }}"
      tag: "${{ needs.tag.outputs.tag }}"
    steps:
    - name: "Set up Docker Buildx"
      uses: "docker/setup-buildx-action@v3"
    - name: "Checkout"
      uses: "actions/checkout@v4"
    - name: "Download dist"
      uses: "actions/download-artifact@v4"
      with:
        name: "dist"
        path: "dist"
    - name: "Download node_modules"
      uses: "actions/download-artifact@v4"
      with:
        name: "node_modules"
        path: "node_modules"
    - id: "meta"
      name: "Docker Metadata"
      uses: "docker/metadata-action@v5"
      with:
        images: "images.home.mtaylor.io/mtaylor.io"
        tags: |
          latest
          ${{ needs.tag.outputs.tag }}
          sha-${{ needs.tag.outputs.sha }}
    - name: "Docker Build"
      uses: "docker/build-push-action@v6"
      with:
        push: true
        context: "."
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
  release:
    name: "Release"
    environment: "production"
    runs-on: "mtaylor-io-runners"
    container:
      image: "images.home.mtaylor.io/deployer:0.0.9"
    needs:
    - "docker"
    steps:
    - name: "Checkout mtaylor.io"
      uses: "actions/checkout@v4"
      with:
        path: "mtaylor.io"
        ref: "refs/tags/${{ needs.docker.outputs.tag }}"
    - name: "Checkout argocd-deployment"
      uses: "actions/checkout@v4"
      with:
        path: "argocd-deployment"
        ref: "main"
        repository: "mtaylor91/argocd-deployment"
        ssh-key: ${{ secrets.ARGOCD_DEPLOYMENT_SSH_PRIVATE_KEY }}
    - name: "Update Release Branch"
      shell: "bash"
      run: |
        set -euxo pipefail
        git config --global user.email "githubactions@mtaylor.io"
        git config --global user.name "GitHub Actions"
        cd mtaylor.io
        git push -f origin HEAD:release
    - name: "Update argocd-deployment"
      shell: "bash"
      run: |
        set -euxo pipefail
        cd argocd-deployment
        ./bin/update-repo-tag.sh home/namespaced/mtaylor-io mtaylor.io ${{ needs.docker.outputs.tag }}
        git commit -a -m "Update mtaylor-io to ${{ needs.docker.outputs.tag }}"
        git push origin main
    - name: "Sync argocd"
      shell: "bash"
      env:
        ARGOCD_SERVER: "argocd.mtaylor.io"
        ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
      run: |
        set -euxo pipefail
        argocd app sync argocd/mtaylor-io --grpc-web
        argocd app wait argocd/mtaylor-io --grpc-web --timeout 300 --health --sync
