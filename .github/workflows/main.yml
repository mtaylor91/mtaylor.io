name: "Build"
on:
  push:
    branches:
    - "main"
jobs:
  build:
    name: "Build Source"
    runs-on: "mtaylor-io-runners"
    container:
      image: "docker.io/oven/bun:1"
    steps:
    - name: "Checkout"
      uses: "actions/checkout@v4"
    - name: "Build"
      run: |
        bun install
        bun run build
    - name: "Upload dist"
      uses: "actions/upload-artifact@v4"
      with:
        name: "dist"
        path: "dist"
        if-no-files-found: "error"
        retention-days: 0
        include-hidden-files: false
    - name: "Upload node_modules"
      uses: "actions/upload-artifact@v4"
      with:
        name: "node_modules"
        path: "node_modules"
        if-no-files-found: "error"
        retention-days: 0
        include-hidden-files: true
  version:
    name: "Assign Version"
    runs-on: "mtaylor-io-runners"
    container:
      image: "images.home.mtaylor.io/deployer:0.0.7"
    outputs:
      tag: "${{ steps.version.outputs.tag }}"
    steps:
    - name: "Checkout"
      uses: "actions/checkout@v4"
    - id: "version"
      name: "Generate Version Tag"
      run: |
        set -eux
        git config --global --add safe.directory $GITHUB_WORKSPACE
        git fetch origin 'refs/tags/*:refs/tags/*'
        export tag=$(get-release-tag)
        echo "tag=$tag" >> $GITHUB_OUTPUT
  tag:
    name: "Tag Repository"
    runs-on: "mtaylor-io-runners"
    container:
      image: "images.home.mtaylor.io/deployer:0.0.7"
    needs:
    - "build"
    - "version"
    outputs:
      tag: "${{ needs.version.outputs.tag }}"
    steps:
    - name: "Checkout"
      uses: "actions/checkout@v4"
    - name: "Tag"
      run: |
        set -eux
        git config --global --add safe.directory $GITHUB_WORKSPACE
        git config --global user.email "githubactions@mtaylor.io"
        git config --global user.name "GitHub Actions"
        git tag -a ${{ needs.version.outputs.tag }} -m "Release ${{ needs.version.outputs.tag }}"
        git push origin ${{ needs.version.outputs.tag }}
  docker:
    name: "Build Docker Image"
    runs-on: "mtaylor-io-runners-dind"
    needs:
    - "tag"
    steps:
    - name: "Set up Docker Buildx"
      uses: "docker/setup-buildx-action@v3"
    - name: "Checkout"
      uses: "actions/checkout@v4"
    - name: "Download dist"
      uses: "actions/download-artifact@v4"
      with:
        name: "dist"
        path: "dist"
    - name: "Download node_modules"
      uses: "actions/download-artifact@v4"
      with:
        name: "node_modules"
        path: "node_modules"
    - id: "meta"
      name: "Docker Metadata"
      uses: "docker/metadata-action@v5"
      with:
        images: "images.home.mtaylor.io/mtaylor.io"
        tags: |
          latest
          ${{ needs.tag.outputs.tag }}
          type=sha
    - name: "Docker Build"
      uses: "docker/build-push-action@v6"
      with:
        context: "."
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
